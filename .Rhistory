library(shiny); runApp('Wasabi_app_onlyGenre.R')
runApp('Wasabi_app_onlyGenre.R')
runApp('Wasabi_app_onlyGenre.R')
library(shiny); runApp('Wasabi_app_genre_group.R')
library(shiny); runApp('Wasabi_app_genre_group.R')
library(shiny); runApp('Wasabi_app_genre_group.R')
library(shiny)
library(data.table)
library(tidyr)
library(tidyverse)
library(ggplot2)
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library(stringi)
theme_set(theme_bw())
library(shinyBS)
library(plotly)
knitr::opts_chunk$set(echo = T)
#load the data
setwd("C:/Users/Acer/Desktop/DataVizProject")
dat<- fread("wasabi_artists.csv",select =c("_id","name","genres","type",
"lifeSpan.begin","lifeSpan.ended","lifeSpan.end", "labels", "location.city","location.country"))
head(dat)
##data contrains the map of the world.
world <- ne_countries(scale = "medium", returnclass = "sf")
head(world[,1:4])
#genres text is extracted:
## extract only letters
all_genres<-str_replace_all(dat$genres, "[^[:alnum:]]", " ")
## count number of artists in each genre.
all_genres<-table(unlist(str_split(all_genres, " ")))
head(all_genres,20)
##based on the list above this contains the list of chosen genres.
genreListDetail<-c("All","hip","rap","east coast",
"blues","jazz","christian", "religious",
"classical","ballet","Baroque",
"dance",
"electronic","electro","bass","house","disco","techno","garage",
"pop","chanson","synthpop",
"u0026b","soul",
"rock", "metal","punk",
"country")
## the above list is categorized in wider genre definition.
genreList<-c("All", rep("Hip-Hop/Rap",3),
"Blues","Jazz",rep("Religious",2),
rep("Classical",3),
"Dance",
rep("Electronic",7),
rep("Pop",3),
rep("R&B Soul",2),
rep("Rock Metal Punk",3),
"Country"
)
## creating columns with genres that is coded:
##  1 if the artist has produced album in this genre,
##  0 otherwise.
for(jj in 1:length(genreList))
{
dat[,genreList[jj]]<-stri_detect_fixed(tolower(dat$genres),genreListDetail[jj])*1
}
head(dat[140:200,c(2,18:22)])
##convert in data.frame
dat.df<-as.data.frame(dat)
dat.df1<-dat.df
inGenre<-"All"
## grouping data by country
country.df= dat.df1 %>% group_by(country=location.country) %>%
summarise(no_artists=n())
head(country.df[20:30,])
##the countries with no artists in the categories is "Rest"
country.df$country<-ifelse(country.df$no_artists>=1,country.df$country, "Rest")
#merging world data and wasabi data
world_artist<-merge(world,country.df, by.x="name", by.y="country", all.x=T)
## creating column that contains no. of artist in mio. population.
world_artist$`Number of artists per Milion population`<-round(world_artist$no_artist/world_artist$pop_est*10^6,2)
#Country name that will be shown in the label.
world_artist$Country=world_artist$name_long
##map plot
p<-ggplot(data = world_artist) +
geom_sf(aes(fill = `Number of artists per Milion population`,label = Country))+
scale_fill_gradientn(colours = heat.colors(100,1)[60:1],na.value = "white") +
guides(fill=guide_legend(title="No. artists/Mil pop."))
##interactive plot (ggplotly)
# p <- ggplotly(p)
p
